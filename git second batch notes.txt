Git is a distributed version control system. 
   This means that each user has their own version of the repository. These repositories are synchronized through a central repository. The central repository could also be used for releasing source code.

The main advantage of DRVCs is that commonly used operations don’t require an internet connection and communication with the central repository. Connection is only required when version history is being synchronized with other repositories. This makes the operations faster and enables continued usage anywhere.

PATH

.	Just a dot describes current working directory. ”The directory you’re currently in”
..	Just two dots describes the parent directory.
~	Refers to users home directory (Usually /home/<username>)
*	Wildcard. 0-n any characters.
?	Single character wildcard.

Working directory
Path from where commands are being executed. Working directory can be changed with command cd (change directory).

Examples:
cd ~/repositories/ – Moves to ”~/repositories” directory

cd .. – Moves to working directory’s parent directory

The most commonly used git commands are:
 add        Add file contents to the index
 bisect     Find by binary search the change that introduced a bug
 branch     List, create, or delete branches
 checkout   Checkout a branch or paths to the working tree
 clone      Clone a repository into a new directory
 commit     Record changes to the repository
 diff       Show changes between commits, commit and working tree, etc
 fetch      Download objects and refs from another repository
 grep       Print lines matching a pattern
 init       Create an empty Git repository or reinitialize an existing one
 log        Show commit logs
 merge      Join two or more development histories together
 mv         Move or rename a file, a directory, or a symlink
 pull       Fetch from and merge with another repository or a local branch
 push       Update remote refs along with associated objects
 rebase     Forward-port local commits to the updated upstream head
 reset      Reset current HEAD to the specified state
 rm         Remove files from the working tree and from the index
 show       Show various types of objects
 status     Show the working tree status
 tag        Create, list, delete or verify a tag object signed with GPG

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Square brackets ([])
Mean optional parameters. They aren’t required in normal execution, but can be used to alter default execution.

The first optional parameter marked with [--version] is an optional parameter that can be used to specify Git to print it’s version.

Chevrons (<>)
Specify a identifier for a parameter. The identifier can be descriptive by itself or there could be more specific information on the values later in the manual.

The only non optional parameter defined in the --help was <command>. And the manual lists all the usable values for it.

Vertical bar (|)
Specifies that the different things on it’s sides are alternatives.

In this case [-p|--paginate|--no-pager] lists that the three switches all have the same effect. Vertical bar can also be used to specify possible